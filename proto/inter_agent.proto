syntax = "proto3";

package rds;

import "google/protobuf/empty.proto";


/*
NOTE: This file is for inter-agent RPCs that are not directly related to the main services.
These RPCs are used for health checks, monitoring, or other auxiliary tasks that agents may need to perform.

- Only use unary RPCs in this file.
- Any other RPCs will be resulted in authentication errors.

This RPC's are meant to be used in inter-agent communication, But controlplane is also allowed to use these RPCs.

Requirement for RPC method:
- Must be unary RPCs.
- Each request should container a field `cluster_id`  to identify the cluster on server end.
*/

service InterAgentService {
  rpc RequestRsyncAccess(RequestRsyncAccessRequest) returns (RequestRsyncAccessResponse);
  rpc RevokeRsyncAccess(RevokeRsyncAccessRequest) returns (google.protobuf.Empty);
  rpc SyncReplicationUser(SyncReplicationUserRequest) returns (google.protobuf.Empty);
  rpc CheckDatabaseReachability(CheckDatabaseReachabilityRequest) returns (CheckDatabaseReachabilityResponse);
}

message RequestRsyncAccessRequest {
  string cluster_id = 1;
  string node_id = 2;
}

message RequestRsyncAccessResponse {
  string instance_id = 1;
  int32 port = 2;
  string username = 3;
  string password = 4;
  string src_path = 5;
}

message RevokeRsyncAccessRequest {
  string cluster_id = 1;
  string instance_id = 2;
}

message SyncReplicationUserRequest {
  string cluster_id = 1;
  string node_id = 2;
}

message CheckDatabaseReachabilityRequest {
  string cluster_id = 1;
  string node_id = 2;
}

message CheckDatabaseReachabilityResponse {
  bool reachable = 1;
}