# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and agent classes corresponding to protobuf-defined services."""
import grpc
import warnings

from . import proxy_pb2 as proxy__pb2

GRPC_GENERATED_VERSION = '1.73.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in proxy_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class ProxyServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Create = channel.unary_unary(
                '/rds.ProxyService/Create',
                request_serializer=proxy__pb2.ProxyCreateRequest.SerializeToString,
                response_deserializer=proxy__pb2.ProxyInfoResponse.FromString,
                _registered_method=True)
        self.Get = channel.unary_unary(
                '/rds.ProxyService/Get',
                request_serializer=proxy__pb2.ProxyIdRequest.SerializeToString,
                response_deserializer=proxy__pb2.ProxyInfoResponse.FromString,
                _registered_method=True)
        self.Status = channel.unary_unary(
                '/rds.ProxyService/Status',
                request_serializer=proxy__pb2.ProxyIdRequest.SerializeToString,
                response_deserializer=proxy__pb2.ProxyStatusResponse.FromString,
                _registered_method=True)
        self.Start = channel.unary_unary(
                '/rds.ProxyService/Start',
                request_serializer=proxy__pb2.ProxyIdRequest.SerializeToString,
                response_deserializer=proxy__pb2.ProxyStatusResponse.FromString,
                _registered_method=True)
        self.Stop = channel.unary_unary(
                '/rds.ProxyService/Stop',
                request_serializer=proxy__pb2.ProxyIdRequest.SerializeToString,
                response_deserializer=proxy__pb2.ProxyStatusResponse.FromString,
                _registered_method=True)
        self.Restart = channel.unary_unary(
                '/rds.ProxyService/Restart',
                request_serializer=proxy__pb2.ProxyIdRequest.SerializeToString,
                response_deserializer=proxy__pb2.ProxyStatusResponse.FromString,
                _registered_method=True)
        self.Delete = channel.unary_unary(
                '/rds.ProxyService/Delete',
                request_serializer=proxy__pb2.ProxyIdRequest.SerializeToString,
                response_deserializer=proxy__pb2.ProxyDeleteResponse.FromString,
                _registered_method=True)
        self.GetMonitorCredential = channel.unary_unary(
                '/rds.ProxyService/GetMonitorCredential',
                request_serializer=proxy__pb2.ProxyIdRequest.SerializeToString,
                response_deserializer=proxy__pb2.ProxyMonitorCredentialResponse.FromString,
                _registered_method=True)
        self.Upgrade = channel.unary_unary(
                '/rds.ProxyService/Upgrade',
                request_serializer=proxy__pb2.ProxyUpgradeRequest.SerializeToString,
                response_deserializer=proxy__pb2.ProxyInfoResponse.FromString,
                _registered_method=True)
        self.SyncUsers = channel.unary_unary(
                '/rds.ProxyService/SyncUsers',
                request_serializer=proxy__pb2.ProxySyncUsersRequest.SerializeToString,
                response_deserializer=proxy__pb2.ProxySyncUsersResponse.FromString,
                _registered_method=True)


class ProxyServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Create(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Status(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Start(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Stop(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Restart(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMonitorCredential(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Upgrade(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SyncUsers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ProxyServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Create': grpc.unary_unary_rpc_method_handler(
                    servicer.Create,
                    request_deserializer=proxy__pb2.ProxyCreateRequest.FromString,
                    response_serializer=proxy__pb2.ProxyInfoResponse.SerializeToString,
            ),
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=proxy__pb2.ProxyIdRequest.FromString,
                    response_serializer=proxy__pb2.ProxyInfoResponse.SerializeToString,
            ),
            'Status': grpc.unary_unary_rpc_method_handler(
                    servicer.Status,
                    request_deserializer=proxy__pb2.ProxyIdRequest.FromString,
                    response_serializer=proxy__pb2.ProxyStatusResponse.SerializeToString,
            ),
            'Start': grpc.unary_unary_rpc_method_handler(
                    servicer.Start,
                    request_deserializer=proxy__pb2.ProxyIdRequest.FromString,
                    response_serializer=proxy__pb2.ProxyStatusResponse.SerializeToString,
            ),
            'Stop': grpc.unary_unary_rpc_method_handler(
                    servicer.Stop,
                    request_deserializer=proxy__pb2.ProxyIdRequest.FromString,
                    response_serializer=proxy__pb2.ProxyStatusResponse.SerializeToString,
            ),
            'Restart': grpc.unary_unary_rpc_method_handler(
                    servicer.Restart,
                    request_deserializer=proxy__pb2.ProxyIdRequest.FromString,
                    response_serializer=proxy__pb2.ProxyStatusResponse.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=proxy__pb2.ProxyIdRequest.FromString,
                    response_serializer=proxy__pb2.ProxyDeleteResponse.SerializeToString,
            ),
            'GetMonitorCredential': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMonitorCredential,
                    request_deserializer=proxy__pb2.ProxyIdRequest.FromString,
                    response_serializer=proxy__pb2.ProxyMonitorCredentialResponse.SerializeToString,
            ),
            'Upgrade': grpc.unary_unary_rpc_method_handler(
                    servicer.Upgrade,
                    request_deserializer=proxy__pb2.ProxyUpgradeRequest.FromString,
                    response_serializer=proxy__pb2.ProxyInfoResponse.SerializeToString,
            ),
            'SyncUsers': grpc.unary_unary_rpc_method_handler(
                    servicer.SyncUsers,
                    request_deserializer=proxy__pb2.ProxySyncUsersRequest.FromString,
                    response_serializer=proxy__pb2.ProxySyncUsersResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'rds.ProxyService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('rds.ProxyService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ProxyService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/rds.ProxyService/Create',
            proxy__pb2.ProxyCreateRequest.SerializeToString,
            proxy__pb2.ProxyInfoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/rds.ProxyService/Get',
            proxy__pb2.ProxyIdRequest.SerializeToString,
            proxy__pb2.ProxyInfoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Status(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/rds.ProxyService/Status',
            proxy__pb2.ProxyIdRequest.SerializeToString,
            proxy__pb2.ProxyStatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Start(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/rds.ProxyService/Start',
            proxy__pb2.ProxyIdRequest.SerializeToString,
            proxy__pb2.ProxyStatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Stop(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/rds.ProxyService/Stop',
            proxy__pb2.ProxyIdRequest.SerializeToString,
            proxy__pb2.ProxyStatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Restart(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/rds.ProxyService/Restart',
            proxy__pb2.ProxyIdRequest.SerializeToString,
            proxy__pb2.ProxyStatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/rds.ProxyService/Delete',
            proxy__pb2.ProxyIdRequest.SerializeToString,
            proxy__pb2.ProxyDeleteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetMonitorCredential(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/rds.ProxyService/GetMonitorCredential',
            proxy__pb2.ProxyIdRequest.SerializeToString,
            proxy__pb2.ProxyMonitorCredentialResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Upgrade(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/rds.ProxyService/Upgrade',
            proxy__pb2.ProxyUpgradeRequest.SerializeToString,
            proxy__pb2.ProxyInfoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SyncUsers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/rds.ProxyService/SyncUsers',
            proxy__pb2.ProxySyncUsersRequest.SerializeToString,
            proxy__pb2.ProxySyncUsersResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
